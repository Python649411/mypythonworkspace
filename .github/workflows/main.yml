name: Build Kivy Android APK

on:
  push:
    branches: [ master ] # master 브랜치에 코드가 푸시될 때마다 워크플로우 실행
  pull_request:
    branches: [ master ] # master 브랜치로 풀 리퀘스트가 들어올 때 워크플로우 실행

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup Java JDK
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    # Buildozer 빌드 캐시를 위한 캐싱 스텝 추가 (SDK/NDK 재다운로드 방지)
    - name: Cache Buildozer downloads
      uses: actions/cache@v4
      with:
        path: |
          ${{ github.workspace }}/.buildozer/android/platform
          ${{ github.workspace }}/.buildozer/downloads
          /opt/android-sdk # 캐시 경로에 SDK 폴더 추가 (수동 설치 경로)
        key: buildozer-cache-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          buildozer-cache-

    - name: Install Buildozer dependencies
      run: |
        sudo apt update
        sudo apt install -y git zip unzip python3-pip build-essential autoconf libtool screen
        
        pip install --user buildozer
        pip install cython

        echo "export PATH=$HOME/.local/bin:$PATH" >> ~/.bashrc
        source ~/.bashrc

    # Buildozer가 아닌, 우리가 직접 SDK를 설치하는 단계
    - name: Manual Android SDK/NDK Setup
      run: |
        ANDROID_HOME=/opt/android-sdk # SDK 설치 경로 정의
        mkdir -p "$ANDROID_HOME"
        cd "$ANDROID_HOME"

        # Download and extract Android Command Line Tools
        # sdkmanager가 포함되어 있음
        wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        mkdir -p cmdline-tools/latest
        unzip commandlinetools-linux-9477386_latest.zip -d cmdline-tools/latest
        mv cmdline-tools/latest/cmdline-tools/* cmdline-tools/latest/
        rmdir cmdline-tools/latest/cmdline-tools

        # Setup PATH for sdkmanager and other tools
        export PATH="$PATH:$ANDROID_HOME/cmdline-tools/latest/bin"

        # Install necessary SDK components, ensuring stable versions
        # android.api=33에 맞춰 specific build-tools;33.0.0 명시
        echo "Installing SDK components..."
        yes | sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.0" "cmdline-tools;latest" "ndk;25.2.9519653"

        # Accept all licenses for installed components
        echo "Accepting SDK licenses..."
        yes | sdkmanager --licenses
        
        # Navigate back to workspace
        cd ${{ github.workspace }}

    - name: Build Kivy Android APK
      run: |
        # ANDROID_SDK_ROOT와 ANDROID_NDK_HOME을 Buildozer가 인식하도록 명확하게 설정
        export ANDROID_SDK_ROOT="/opt/android-sdk"
        export ANDROID_NDK_HOME="/opt/android-sdk/ndk/25.2.9519653" # NDK 설치 경로 확인 필요 (sdkmanager가 설치한 NDK의 최종 경로)

        # Buildozer가 사용할 PATH 변수 설정 (Build-tools/33.0.0 포함)
        export PATH="$PATH:$ANDROID_SDK_ROOT/build-tools/33.0.0:$ANDROID_SDK_ROOT/platform-tools:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin"

        # buildozer.spec에 SDK/NDK 경로 강제 지정 (Buildozer가 명확히 참조하도록)
        # 기존 설정 삭제 후 추가 방식으로 확실하게 적용
        sed -i '/^android\.sdk_path/d' buildozer.spec
        sed -i '/^android\.ndk_path/d' buildozer.spec
        echo "android.sdk_path = ${ANDROID_SDK_ROOT}" >> buildozer.spec
        echo "android.ndk_path = ${ANDROID_NDK_HOME}" >> buildozer.spec

        # 최종 빌드 실행 (SDK/NDK는 이미 설치되었으므로 Buildozer가 이를 사용해야 함)
        buildozer android debug

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: Jeommechu-APK
        path: bin/*.apk
        
    - name: Collect Full Build Logs
      if: always()
      run: |
        cd ${{ github.workspace }}
        LOG_DIR=".buildozer/logs"
        if [ -d "$LOG_DIR" ]; then
            zip -r build_log.zip "$LOG_DIR"/*
            echo "Build log zipped successfully."
        else
            echo "Build log directory not found: $LOG_DIR"
            touch build_log.zip
        fi
        
    - name: Upload Full Build Logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: full-build-log
        path: build_log.zip
