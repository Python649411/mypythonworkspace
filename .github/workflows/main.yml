name: Build Kivy Android APK (Direct Pathing Final Attempt)

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    env: # ✨ 여기에 ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true' 가 있어야 함! ✨
      ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true' 

    steps:
    - uses: actions/checkout@v2

    - name: Setup Java JDK (Java 17)
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Set up Python (3.9)
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    # ✨ 핵심: android-actions/setup-android 사용 ✨
    - name: Set up Android SDK and NDK via action
      uses: android-actions/setup-android@v2.0.0
      with:
        api-level: 30
        build-tools: 30.0.3
        ndk: r25b
        cmake-version: 3.10.2
        install-latest-platform-tools: true 

    - name: Install Buildozer dependencies
      run: |
        sudo apt update
        sudo apt install -y git zip unzip python3-pip build-essential autoconf libtool screen curl
        
        pip install --user buildozer
        pip install cython

        echo "export PATH=$HOME/.local/bin:$PATH" >> $GITHUB_ENV # Buildozer 명령어 PATH
        echo "PATH=$PATH:$HOME/.local/bin" >> $GITHUB_ENV

    - name: Aggressive Clean (Buildozer artifacts only)
      run: |
        rm -rf .buildozer
        rm -rf ~/.buildozer

    - name: Build Android APK
      run: |
        set -x # Debugging

        echo "Debugging: Starting buildozer android debug with direct SDK/NDK paths in buildozer.spec."
        # buildozer.spec의 android.sdk_path와 android.ndk_path가 setup-android가 설치한 경로를 가리키므로
        # Buildozer는 해당 경로의 SDK를 사용해야 함.
        buildozer android debug

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: Jeommechu-APK
        path: bin/*.apk
        
    - name: Collect Full Build Logs (for debugging)
      if: always()
      run: |
        LOG_DIR=".buildozer/logs"
        if [ -d "$LOG_DIR" ]; then
            zip -r build_log.zip "$LOG_DIR"/*
            echo "Build log zipped successfully."
        else
            echo "Build log directory not found: $LOG_DIR"
            touch build_log.zip
        fi
        
    - name: Upload Full Build Logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: full-build-log
        path: build_log.zip
