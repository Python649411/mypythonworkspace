name: Build Kivy Android APK (Python 3.8)

on:
  push:
    branches: [ master ] # master 브랜치에 코드가 푸시될 때마다 워크플로우 실행
  pull_request:
    branches: [ master ] # master 브랜치로 풀 리퀘스트가 들어올 때 워크플로우 실행

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup Java JDK
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7' # <--- 여기에 Python 3.8이 설정되어 있어!

    # Buildozer 빌드 캐시를 위한 캐싱 스텝 추가
    # 이전 빌드에서 다운로드된 SDK/NDK를 재사용하여 빌드 시간 단축
    - name: Cache Buildozer downloads
      uses: actions/cache@v4
      with:
        path: |
          ${{ github.workspace }}/.buildozer/android/platform
          ${{ github.workspace }}/.buildozer/downloads
        key: buildozer-cache-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          buildozer-cache-

    - name: Install Buildozer dependencies
      run: |
        sudo apt update
        sudo apt install -y git zip unzip python3-pip build-essential autoconf libtool screen
        
        pip install --user buildozer
        pip install cython

        echo "export PATH=$HOME/.local/bin:$PATH" >> ~/.bashrc
        source ~/.bashrc

    - name: Clean Buildozer environment and Build APK
      run: |
        cd ${{ github.workspace }}

        # 환경 클린업 (이전 실패 이력을 없애기 위함)
        buildozer appclean
        rm -rf ~/.buildozer # 혹시 모를 문제 해결을 위해 캐시 폴더까지 완전히 삭제

        # buildozer.spec에 설정된 API 레벨에 맞는 SDK/NDK를 Buildozer가 직접 설치하도록 위임
        # (이번에는 별도의 sdkmanager 호출 없이 buildozer 자체에 맡김)
        buildozer android debug

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: Jeommechu-APK
        path: bin/*.apk
        
    - name: Collect Full Build Logs
      if: always() # 빌드 성공/실패 여부와 상관없이 항상 로그 수집
      run: |
        cd ${{ github.workspace }}
        LOG_DIR=".buildozer/logs"
        if [ -d "$LOG_DIR" ]; then
            zip -r build_log.zip "$LOG_DIR"/*
            echo "Build log zipped successfully."
        else
            echo "Build log directory not found: $LOG_DIR"
            touch build_log.zip # 디렉토리가 없으면 빈 파일 생성
        fi
        
    - name: Upload Full Build Logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: full-build-log
        path: build_log.zip
