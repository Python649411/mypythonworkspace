name: Build Kivy Android APK (Ultimate Regression to Stable Versions)

on:
  push:
    branches: [ master ] # master 브랜치에 코드가 푸시될 때마다 워크플로우 실행
  pull_request:
    branches: [ master ] # master 브랜치로 풀 리퀘스트가 들어올 때 워크플로우 실행

jobs:
  build:
    runs-on: ubuntu-latest # 가장 기본적인 Ubuntu 런너 사용

    steps:
    - uses: actions/checkout@v2

    - name: Setup Java JDK (Java 8 for SDK compatibility) # ✨ Java 8 사용! ✨
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '8' # <--- ✨ 이 라인을 8로 바꿔줘! ✨

    - name: Set up Python (Python 3.8 as requested) # ✨ Python 3.8 사용! ✨
      uses: actions/setup-python@v2
      with:
        python-version: '3.8' # <--- ✨ 이 라인을 3.8로 바꿔줘! ✨

    - name: Install Buildozer dependencies
      run: |
        sudo apt update
        sudo apt install -y git zip unzip python3-pip build-essential autoconf libtool screen curl # 최소한의 의존성만 설치
        
        pip install --user buildozer
        pip install cython # Cython은 Kivy 컴파일에 필수

        echo "export PATH=$HOME/.local/bin:$PATH" >> $GITHUB_ENV # Buildozer 명령어를 위해 PATH 추가
        echo "PATH=$PATH:$HOME/.local/bin" >> $GITHUB_ENV
        source /etc/profile || true # 환경변수 즉시 적용

    - name: Aggressive Clean (Before Buildozer run)
      run: |
        rm -rf .buildozer
        rm -rf ~/.buildozer

    - name: Build Android APK (Let Buildozer handle all SDK with API 28)
      run: |
        set -x # ✨ 모든 명령어 실행 전 출력 (디버깅용) ✨

        echo "Debugging: Starting buildozer android debug with API 28 target and Python 3.8..."
        
        # Buildozer에게 모든 SDK/NDK 다운로드, 설치, 라이선스 동의를 맡김.
        # buildozer.spec에 설정된 android.api=28 및 android.build_tools=28.0.3을 따르도록 기대함.
        buildozer android debug

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: Jeommechu-APK
        path: bin/*.apk
        
    - name: Collect Full Build Logs (for debugging)
      if: always() # 빌드 성공/실패 여부와 상관없이 항상 로그 수집
      run: |
        LOG_DIR=".buildozer/logs"
        if [ -d "$LOG_DIR" ]; then
            zip -r build_log.zip "$LOG_DIR"/*
            echo "Build log zipped successfully."
        else
            echo "Build log directory not found: $LOG_DIR"
            touch build_log.zip
        fi # <--- ✨ 여기가 'fi'인지 확인! ✨
        
    - name: Upload Full Build Logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: full-build-log
        path: build_log.zip
