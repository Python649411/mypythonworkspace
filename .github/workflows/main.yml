name: Build Kivy Android APK (P4A_BUILD_TOOLS_VERSION Control)

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    env: # ACTIONS_ALLOW_UNSECURE_COMMANDS가 여기에 있어야 함!
      ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true' 

    steps:
    - uses: actions/checkout@v2

    - name: Setup Java JDK (Java 17)
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Set up Python (3.9)
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    # ✨ 핵심: android-actions/setup-android 사용 (API 30, Build-Tools 30.0.3) ✨
    - name: Set up Android SDK and NDK via action
      uses: android-actions/setup-android@v3.0.0
      with:
        api-level: 30
        build-tools: 30.0.3
        # ndk: r25b # 이 라인은 삭제되었거나 주석 처리되어 있어야 함!
        cmake-version: 3.10.2
        install-latest-platform-tools: true 

    - name: Install Buildozer dependencies
      run: |
        sudo apt update
        sudo apt install -y git zip unzip python3-pip build-essential autoconf libtool screen curl
        
        pip install --user buildozer
        pip install cython

        echo "export PATH=$HOME/.local/bin:$PATH" >> $GITHUB_ENV
        echo "PATH=$PATH:$HOME/.local/bin" >> $GITHUB_ENV
        source /etc/profile || true # 환경변수 즉시 적용

    - name: Aggressive Clean (Before Buildozer run)
      run: |
        rm -rf .buildozer
        rm -rf ~/.buildozer

    - name: Build Android APK (Explicit P4A_BUILD_TOOLS_VERSION)
      run: |
        set -x # ✨ 모든 명령어 실행 전 출력 (디버깅용) ✨

        echo "Debugging: Starting buildozer android debug with P4A_BUILD_TOOLS_VERSION."
        
        # P4A_BUILD_TOOLS_VERSION 환경 변수를 설정하여 P4A에게 특정 빌드 툴을 사용하도록 강제
        export P4A_BUILD_TOOLS_VERSION=30.0.3 # <--- ✨ 이 라인 추가! ✨

        # ANDROID_HOME 및 ANDROID_SDK_ROOT 환경 변수를 setup-android 액션이 설치한 경로로 명시적 설정
        # (setup-android 액션이 이를 이미 설정하지만, 명시적으로 다시 한번 설정하여 확실하게 함)
        export ANDROID_HOME=/usr/local/lib/android/sdk # <--- ✨ 이 라인 추가! ✨
        export ANDROID_SDK_ROOT=/usr/local/lib/android/sdk # <--- ✨ 이 라인 추가! ✨

        buildozer android debug

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: Jeommechu-APK
        path: bin/*.apk
        
    - name: Collect Full Build Logs (for debugging)
      if: always() # 빌드 성공/실패 여부와 상관없이 항상 로그 수집
      run: |
        LOG_DIR=".buildozer/logs"
        if [ -d "$LOG_DIR" ]; then
            zip -r build_log.zip "$LOG_DIR"/*
            echo "Build log zipped successfully."
        else
            echo "Build log directory not found: $LOG_DIR"
            touch build_log.zip
        fi
        
    - name: Upload Full Build Logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: full-build-log
        path: build_log.zip
