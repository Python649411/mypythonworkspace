name: Build Kivy Android APK (Docker Strategy - Latest Android)

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: "macalimlim/android-build-box:latest" # <--- ✨ 최신 안드로이드 빌드 박스 이미지 사용! ✨
      options: --user root # 컨테이너 내에서 권한 문제 해결을 위해 root 권한으로 실행
    
    steps:
    - uses: actions/checkout@v2

    # 컨테이너에 Python 3.9이 있을 것으로 예상되므로, setup-python 액션 대신 직접 pip 사용
    # 단, 정확한 python3 실행 파일 경로를 사용하도록 주의
    - name: Install Buildozer and Cython with Python 3.9
      run: |
        # apt update 및 install 제거 (새 이미지에 포함되어 있거나 필요 없을 가능성 높음)
        # buildozer 및 cython 설치 시 명확하게 python3 실행 파일을 지정
        /usr/bin/python3 -m pip install --user buildozer
        /usr/bin/python3 -m pip install --user cython
        
        # Buildozer 명령어 사용을 위해 .local/bin 경로를 PATH에 추가
        echo "export PATH=$HOME/.local/bin:$PATH" >> $GITHUB_ENV
        echo "PATH=$PATH:$HOME/.local/bin" >> $GITHUB_ENV
        
        # Buildozer가 사용하는 SDK/NDK 경로 설정 (이미지 내부 경로 확인 후 조정 필요할 수 있음)
        # macalimlim/android-build-box 이미지의 기본 SDK/NDK 경로를 가정
        echo "ANDROID_HOME=/opt/android-sdk" >> $GITHUB_ENV
        echo "NDK_HOME=/opt/android-ndk" >> $GITHUB_ENV
        echo "JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64" >> $GITHUB_ENV # 이 이미지의 Java 경로

    - name: Aggressive Clean (Before Buildozer run)
      run: |
        rm -rf .buildozer
        rm -rf ~/.buildozer

    - name: Build Android APK
      run: |
        set -x # ✨ 모든 명령어 실행 전 출력 (디버깅용) ✨

        echo "Debugging: Starting buildozer android debug..."
        
        # buildozer.spec에 명시된 android.api 및 android.build_tools 버전을 따름
        buildozer android debug

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: Jeommechu-APK
        path: bin/*.apk
        
    - name: Collect Full Build Logs (for debugging)
      if: always() # 빌드 성공/실패 여부와 상관없이 항상 로그 수집
      run: |
        LOG_DIR=".buildozer/logs"
        if [ -d "$LOG_DIR" ]; then
            zip -r build_log.zip "$LOG_DIR"/*
            echo "Build log zipped successfully."
        else
            echo "Build log directory not found: $LOG_DIR"
            touch build_log.zip
        fi
        
    - name: Upload Full Build Logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: full-build-log
        path: build_log.zip
